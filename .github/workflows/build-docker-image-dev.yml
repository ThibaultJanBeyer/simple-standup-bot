name: ci

on:
  push:
    branches:
      - "dev"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v3
      - name: get version
        id: get-version
        uses: beaconbrigade/package-json-version@v0.3
        with:
          path: .
      - name: Print the version
        run: echo "The version was ${{ steps.get-version.outputs.version }}"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: standupbotcom
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_SLACK_APP_TOKEN: ${{secrets.PROD_SLACK_APP_TOKEN}}
          envkey_SLACK_CLIENT_ID: ${{secrets.PROD_SLACK_CLIENT_ID}}
          envkey_SLACK_CLIENT_SECRET: ${{secrets.PROD_SLACK_CLIENT_SECRET}}
          envkey_SLACK_CODE: ${{secrets.DEV_SLACK_CODE}}
          envkey_CLERK_SECRET_KEY: ${{secrets.DEV_CLERK_SECRET_KEY}}
          envkey_NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{secrets.DEV_NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}}
          envkey_DATABASE_URL: ${{secrets.DEV_DATABASE_URL}}
          envkey_COMMUNICATION_TOKEN: ${{secrets.DEV_COMMUNICATION_TOKEN}}
          envkey_NEXT_PUBLIC_CLERK_SIGN_IN_URL: /auth/sign-in
          envkey_NEXT_PUBLIC_CLERK_SIGN_UP_URL: /auth/sign-in
          envkey_NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL: /standups
          envkey_NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL: /standups
          envkey_SLACK_REDIRECT_URI: https://standup-bot.com/api
          file_name: .env.production
          directory: ./
          fail_on_empty: true
          sort_keys: true
      # @TODO: make dev deploys possible
      # i.e. could have a dev port and an env port for the app and dev port is not bound to the .com domain
      # - name: Build & Publish docker image
      #   run: |
      #     docker build . -f ./dockerfile --platform linux/amd64 -t standupbotcom/ssb:${{ github.sha }}
      #     docker push standupbotcom/ssb:${{ github.sha }}
      # - name: applying new image on prod
      #   uses: appleboy/ssh-action@v0.1.10
      #   with:
      #     host: ${{ secrets.HOST }}
      #     username: ${{ secrets.USERNAME }}
      #     key: ${{ secrets.KEY }}
      #     script_stop: true
      #     script: |
      #       cd simple-standup-bot
      #       git pull
      #       git checkout dev
      #       git pull
      #       ./start.sh
      #       git checkout main
