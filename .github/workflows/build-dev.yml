name: ci

on:
  push:
    branches:
      - "dev"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v3
      - name: get version
        id: get-version
        uses: beaconbrigade/package-json-version@v0.3
        with:
          path: .
      - name: Print the version
        run: echo "The version was ${{ steps.get-version.outputs.version }}"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DEV_DOCKERHUB_USERNAME }}
          password: ${{ secrets.DEV_DOCKERHUB_TOKEN }}
      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_SLACK_APP_TOKEN: ${{secrets.DEV_SLACK_APP_TOKEN}}
          envkey_SLACK_CLIENT_ID: ${{secrets.DEV_SLACK_CLIENT_ID}}
          envkey_SLACK_CLIENT_SECRET: ${{secrets.DEV_SLACK_CLIENT_SECRET}}
          envkey_SLACK_CODE: ${{secrets.DEV_SLACK_CODE}}
          envkey_SLACK_SIGNING_SECRET: ${{secrets.DEV_SLACK_SIGNING_SECRET}}
          envkey_DATABASE_URL: ${{secrets.DEV_DATABASE_URL}}
          envkey_NEXTAUTH_SECRET: ${{secrets.DEV_NEXTAUTH_SECRET}}
          envkey_PROTOCOL: ${{secrets.DEV_PROTOCOL}}
          envkey_COMMUNICATION_TOKEN: ${{secrets.DEV_COMMUNICATION_TOKEN}}
          envkey_BOT_URI: ${{secrets.DEV_BOT_URI}}
          envkey_WEB_URI: ${{secrets.DEV_WEB_URI}}
          file_name: .env.production
          directory: ./
          fail_on_empty: true
          sort_keys: true
      - name: Build & Publish docker image
        run: |
          docker build . -f ./dockerfile --platform linux/amd64 -t ${{ secrets.DEV_DOCKERHUB_USERNAME }}/ssb:latest -t ${{ secrets.DEV_DOCKERHUB_USERNAME }}/ssb:${{ steps.get-version.outputs.version }} -t ${{ secrets.DEV_DOCKERHUB_USERNAME }}/ssb:${{ github.sha }}
          docker push ${{ secrets.DEV_DOCKERHUB_USERNAME }}/ssb:latest
          docker push ${{ secrets.DEV_DOCKERHUB_USERNAME }}/ssb:${{ steps.get-version.outputs.version }}
          docker push ${{ secrets.DEV_DOCKERHUB_USERNAME }}/ssb:${{ github.sha }}
      - name: applying new image on prod
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USERNAME }}
          key: ${{ secrets.DEV_KEY }}
          script_stop: true
          script: |
            cd simple-standup-bot
            git pull
            ./start.sh
