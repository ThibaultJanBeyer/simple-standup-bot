name: ci

on:
  push:
    branches:
      - "main"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v3
      - name: get version
        id: get-version
        uses: beaconbrigade/package-json-version@v0.3
        with:
          path: .
      - name: Print the version
        run: echo "The version was ${{ steps.get-version.outputs.version }}"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: standupbotcom
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_SLACK_APP_TOKEN: ${{secrets.PROD_SLACK_APP_TOKEN}}
          envkey_CLERK_SECRET_KEY: ${{secrets.PROD_CLERK_SECRET_KEY}}
          envkey_NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{secrets.PROD_NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}}
          envkey_DATABASE_URL: ${{secrets.PROD_DATABASE_URL}}
          envkey_SLACK_CLIENT_ID: ${{secrets.PROD_SLACK_CLIENT_ID}}
          envkey_SLACK_CLIENT_SECRET: ${{secrets.PROD_SLACK_CLIENT_SECRET}}
          envkey_SLACK_CODE: ${{secrets.PROD_SLACK_CODE}}
          envkey_COMMUNICATION_TOKEN: ${{secrets.PROD_COMMUNICATION_TOKEN}}
          envkey_NEXT_PUBLIC_CLERK_SIGN_IN_URL: /auth/sign-in
          envkey_NEXT_PUBLIC_CLERK_SIGN_UP_URL: /auth/sign-in
          envkey_NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL: /
          envkey_NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL: /
          envkey_SLACK_REDIRECT_URI: https://standup-bot.com/api
          file_name: .env.production
          directory: ./
          fail_on_empty: true
          sort_keys: true
      - name: Publish docker image
        run: |
          ls -a
          cat .env.production
          docker build . -f ./dockerfile --platform linux/amd64 -t standupbotcom/ssb:latest -t standupbotcom/ssb:${{ steps.get-version.outputs.version }} -t standupbotcom/ssb:${{ github.sha }}
          docker push standupbotcom/ssb:latest
          docker push standupbotcom/ssb:${{ steps.get-version.outputs.version }}
          docker push standupbotcom/ssb:${{ github.sha }}
      # - name: Build and push
      #   uses: docker/build-push-action@v4
      #   with:
      #     push: true
      #     platforms: linux/amd64,linux/arm64
      #     tags: |
      #       standupbotcom/ssb:latest
      #       standupbotcom/ssb:${{ steps.get-version.outputs.version }}
      #       standupbotcom/ssb:${{ github.sha }}
      - name: applying new image on prod
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script_stop: true
          script: |
            ls -al
            whoami
            cd simple-standup-bot
            git pull
            ./start.sh
